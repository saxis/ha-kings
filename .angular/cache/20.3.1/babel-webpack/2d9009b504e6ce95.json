{"ast":null,"code":"import { Obligation } from '../../models/obligation.model';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ObligationsComponent_div_32_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 27, 2);\n    i0.ɵɵlistener(\"ngSubmit\", function ObligationsComponent_div_32_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const u_r4 = i0.ɵɵreference(1);\n      const item_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.payNow(u_r4, item_r5));\n    });\n    i0.ɵɵelement(2, \"input\", 28);\n    i0.ɵɵelementStart(3, \"button\", 22);\n    i0.ɵɵtext(4, \"PAY\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ObligationsComponent_div_32_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵtext(1, \"PAID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ObligationsComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, ObligationsComponent_div_32_form_3_Template, 5, 0, \"form\", 24);\n    i0.ɵɵelementStart(4, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function ObligationsComponent_div_32_Template_button_click_4_listener() {\n      const item_r5 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.removeObligation(item_r5));\n    });\n    i0.ɵɵtext(5, \"DELETE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ObligationsComponent_div_32_button_6_Template, 2, 0, \"button\", 26);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" \", item_r5.biller, \" || \", item_r5.expectedAmount, \" || \", item_r5.dueDate, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !item_r5.paid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", item_r5.paid);\n  }\n}\nexport class ObligationsComponent {\n  constructor(as) {\n    this.as = as;\n    this.as.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userId = user.uid;\n      }\n    });\n  }\n  ngOnInit() {\n    this.obligationsCollection = this.afs.collection('obligations', ref => ref.where('owner', '==', this.userId));\n    this.obligationsList = this.obligationsCollection.snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        return {\n          id,\n          ...data\n        };\n      });\n    }));\n  }\n  removeObligation(obligation) {\n    const doc = this.afs.doc(`obligations/${obligation.id}`);\n    doc.delete();\n  }\n  payNow(u, obligation) {\n    console.log(u.value.amountPaid);\n    console.log(obligation);\n    const doc = this.afs.doc(`obligations/${obligation.id}`);\n    doc.update({\n      paid: true,\n      amountPaid: u.value.amountPaid\n    });\n    // console.log('Clicking this should decrease the earnings total by the desires amount');\n  }\n  onSubmit(f) {\n    const obligation = new Obligation(f.value.biller, f.value.dueDate, f.value.datePaid, f.value.expectedAmount, f.value.amountPaid, false, this.userId);\n    const data = JSON.parse(JSON.stringify(obligation));\n    this.obligationsCollection.add(data);\n    f.reset();\n  }\n  static {\n    this.ɵfac = function ObligationsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ObligationsComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ObligationsComponent,\n      selectors: [[\"app-obligations\"]],\n      decls: 47,\n      vars: 3,\n      consts: [[\"f\", \"ngForm\"], [\"jonesy\", \"ngModel\"], [\"u\", \"ngForm\"], [1, \"container\"], [1, \"content\"], [1, \"columns\"], [1, \"column\"], [1, \"panel\"], [1, \"panel-heading\"], [1, \"panel-block\"], [1, \"control\", \"has-icons-left\"], [\"type\", \"text\", \"placeholder\", \"search\", 1, \"input\", \"is-small\"], [1, \"icon\", \"is-small\", \"is-left\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-search\"], [4, \"ngFor\", \"ngForOf\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [1, \"field\"], [1, \"label\"], [1, \"control\", \"has-icons-left\", \"has-icons-right\"], [\"type\", \"text\", \"placeholder\", \"Who is the biller?\", \"name\", \"biller\", \"ngModel\", \"\", \"required\", \"\", 1, \"input\", \"is-success\"], [\"type\", \"date\", \"placeholder\", \"What is the due date?\", \"name\", \"dueDate\", \"ngModel\", \"\", \"required\", \"\", 1, \"input\", \"is-success\"], [\"type\", \"number\", \"placeholder\", \"How much should it be?\", \"name\", \"expectedAmount\", \"ngModel\", \"\", \"required\", \"\", 1, \"input\", \"is-success\"], [1, \"button\"], [1, \"panel-block\", \"is-active\", \"has-icons-right\", \"control\"], [3, \"ngSubmit\", 4, \"ngIf\"], [1, \"button\", 3, \"click\"], [\"class\", \"button\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"Amount Paid\", \"ngModel\", \"\", \"name\", \"amountPaid\", 1, \"input\", \"is-success\", \"short\"]],\n      template: function ObligationsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelement(0, \"app-o-tracker\");\n          i0.ɵɵelementStart(1, \"div\", 3)(2, \"div\", 4)(3, \"h1\");\n          i0.ɵɵtext(4, \"Obligations\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\");\n          i0.ɵɵtext(6, \"Obligations are future date based expenditures that cannot be \\u2018paid off\\u2019. They are recurring expenses, generally monthly, though some are quarterly, yearly or some other option.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"p\");\n          i0.ɵɵtext(8, \"Obligations are lifestyle driven, many can be cancelled temporarily or permanently to reduce overall spend as desired/required. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\");\n          i0.ɵɵtext(10, \"For example, cellular phone service. This can be reduced to near zero in a pinch through the use of prepaid phone plans etc\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"p\");\n          i0.ɵɵtext(12, \"There are several rolling calculations for Obligations calculations. The first is the total available to spend \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"ul\")(14, \"li\");\n          i0.ɵɵtext(15, \"Income allocated to spend on Obligations for the month - obligationsTotal\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"li\");\n          i0.ɵɵtext(17, \"Total currently obligated - obligationsScheduledTotal\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"li\");\n          i0.ɵɵtext(19, \"Total spent so far for the month - obligationsToDateTotal\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"li\");\n          i0.ɵɵtext(21, \"Remaining spend for the month - Derived\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(22, \"div\", 5)(23, \"div\", 6)(24, \"nav\", 7)(25, \"p\", 8);\n          i0.ɵɵtext(26, \" Obligations \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 9)(28, \"p\", 10);\n          i0.ɵɵelement(29, \"input\", 11);\n          i0.ɵɵelementStart(30, \"span\", 12);\n          i0.ɵɵelement(31, \"i\", 13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(32, ObligationsComponent_div_32_Template, 7, 5, \"div\", 14);\n          i0.ɵɵpipe(33, \"async\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(34, \"div\", 6)(35, \"form\", 15, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ObligationsComponent_Template_form_ngSubmit_35_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const f_r7 = i0.ɵɵreference(36);\n            return i0.ɵɵresetView(ctx.onSubmit(f_r7));\n          });\n          i0.ɵɵelementStart(37, \"div\", 16)(38, \"label\", 17);\n          i0.ɵɵtext(39, \"Add Obligation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"div\", 18);\n          i0.ɵɵelement(41, \"input\", 19, 1)(43, \"input\", 20)(44, \"input\", 21);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(45, \"button\", 22);\n          i0.ɵɵtext(46, \"Submit\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(32);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(33, 1, ctx.obligationsList));\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.AsyncPipe],\n      styles: [\".short[_ngcontent-%COMP%] {\\n  width: 80px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvb2JsaWdhdGlvbnMvb2JsaWdhdGlvbnMuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuc2hvcnRcbiAgd2lkdGg6IDgwcHhcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Obligation","map","i0","ɵɵelementStart","ɵɵlistener","ObligationsComponent_div_32_form_3_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r3","u_r4","ɵɵreference","item_r5","ɵɵnextContext","$implicit","ctx_r5","ɵɵresetView","payNow","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ObligationsComponent_div_32_form_3_Template","ObligationsComponent_div_32_Template_button_click_4_listener","_r2","removeObligation","ObligationsComponent_div_32_button_6_Template","ɵɵadvance","ɵɵtextInterpolate3","biller","expectedAmount","dueDate","ɵɵproperty","paid","ObligationsComponent","constructor","as","afAuth","authState","subscribe","user","userId","uid","ngOnInit","obligationsCollection","afs","collection","ref","where","obligationsList","snapshotChanges","pipe","actions","a","data","payload","doc","id","obligation","delete","u","console","log","value","amountPaid","update","onSubmit","f","datePaid","JSON","parse","stringify","add","reset","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","ObligationsComponent_Template","rf","ctx","ObligationsComponent_div_32_Template","ObligationsComponent_Template_form_ngSubmit_35_listener","_r1","f_r7","ɵɵpipeBind1"],"sources":["/Users/saxis/dev/angular_projects/ha-kings/src/app/obligations/obligations.component.ts","/Users/saxis/dev/angular_projects/ha-kings/src/app/obligations/obligations.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Obligation } from '../../models/obligation.model';\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../core/auth.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-obligations',\n  templateUrl: './obligations.component.html',\n  styleUrls: ['./obligations.component.sass']\n})\nexport class ObligationsComponent implements OnInit {\n  obligationsCollection: AngularFirestoreCollection<Obligation>;\n  obligationsList: Observable<Obligation[]>;\n  userId: string;\n  amountPaid: number;\n\n  constructor(private as: AuthService) {\n    this.as.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userId = user.uid;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.obligationsCollection = this.afs.collection('obligations', ref => ref.where('owner', '==', this.userId));\n    this.obligationsList = this.obligationsCollection.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data() as Obligation;\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );\n  }\n\n  removeObligation(obligation) {\n    const doc = this.afs.doc(`obligations/${obligation.id}`);\n    doc.delete();\n  }\n\n  payNow(u: NgForm, obligation) {\n    console.log(u.value.amountPaid);\n    console.log(obligation);\n    const doc = this.afs.doc(`obligations/${obligation.id}`);\n    doc.update({ paid: true, amountPaid: u.value.amountPaid });\n    // console.log('Clicking this should decrease the earnings total by the desires amount');\n  }\n\n  onSubmit(f: NgForm) {\n    const obligation = new Obligation(f.value.biller, f.value.dueDate, f.value.datePaid,\n      f.value.expectedAmount, f.value.amountPaid, false, this.userId);\n\n    const data = JSON.parse(JSON.stringify(obligation));\n\n    this.obligationsCollection.add(data);\n\n    f.reset();\n  }\n\n}\n","<app-o-tracker></app-o-tracker>\n<div class=\"container\">\n  <div class=\"content\">\n    <h1>Obligations</h1>\n    <p>Obligations are future date based expenditures that cannot be ‘paid off’. They are recurring expenses, generally monthly, though some are quarterly, yearly or some other option.</p>\n    <p>Obligations are lifestyle driven, many can be cancelled temporarily or permanently to reduce overall spend as desired/required. </p>\n    <p>For example, cellular phone service. This can be reduced to near zero in a pinch through the use of prepaid phone plans etc</p>\n    <p>There are several rolling calculations for Obligations calculations. The first is the total available to spend </p>\n    <ul>\n      <li>Income allocated to spend on Obligations for the month - obligationsTotal</li>\n      <li>Total currently obligated - obligationsScheduledTotal</li>\n      <li>Total spent so far for the month - obligationsToDateTotal</li>\n      <li>Remaining spend for the month - Derived</li>\n    </ul>\n\n  </div>\n  <div class=\"columns\">\n    <div class=\"column\">\n      <nav class=\"panel\">\n        <p class=\"panel-heading\">\n          Obligations\n        </p>\n        <div class=\"panel-block\">\n          <p class=\"control has-icons-left\">\n            <input class=\"input is-small\" type=\"text\" placeholder=\"search\">\n            <span class=\"icon is-small is-left\">\n              <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\n            </span>\n          </p>\n        </div>\n\n        <div *ngFor=\"let item of obligationsList | async\">\n          <a class=\"panel-block is-active has-icons-right control\">\n            {{item.biller}} || {{item.expectedAmount}} || {{item.dueDate}}\n            <form #u=\"ngForm\" (ngSubmit)=\"payNow(u,item)\" *ngIf=\"!item.paid\">\n              <input class=\"input is-success short\" type=\"text\" placeholder=\"Amount Paid\" ngModel name=\"amountPaid\">\n              <button class=\"button\">PAY</button>\n            </form>\n            <button class=\"button\" (click)=\"removeObligation(item)\">DELETE</button>\n            <button *ngIf=\"item.paid\" class=\"button\">PAID</button>\n          </a>\n        </div>\n      </nav>\n    </div>\n    <div class=\"column\">\n      <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n        <div class=\"field\">\n          <label class=\"label\">Add Obligation</label>\n          <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-success\" type=\"text\"   placeholder=\"Who is the biller?\"  name=\"biller\" ngModel required #jonesy=\"ngModel\">\n            <input class=\"input is-success\" type=\"date\"   placeholder=\"What is the due date?\"          name=\"dueDate\"      ngModel required >\n            <input class=\"input is-success\" type=\"number\"   placeholder=\"How much should it be?\"       name=\"expectedAmount\"    ngModel required >\n          </div>\n        </div>\n        <button class=\"button\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>\n\n  <!-- <div class=\"content\">\n    <h1>Obligations Page Design</h1>\n    <p>Obligations should be a list of all the monthly bills a person has. The Obligations total should be on the top. You should be able to click\n        on any of the bills to get more details. I can find out how to do this by taking the routing course on Pluralsight. The details will show up in card to the right of the list.</p>\n    <p>Obligations are future date based expenditures that cannot be ‘paid off’. They are recurring expenses, generally monthly, though some are quarterly, yearly or some other option. Obligations are lifestyle driven, most can be cancelled temporarily or permanently to reduce overall spend as desired/required. </p>\n    <h2>Details Panel</h2>\n    <p>Some of the options for the details panel should include </p>\n    <ul>\n      <li>Model - A way to simulate removing the bill from the list and show the ramifications of that towards the bottom line.</li>\n      <li>Remove - Same as model but permanent. Should generate an unsubscribe link if possible</li>\n    </ul>\n    <h3>Dates</h3>\n    <p>Very important for the obligations page are the dates due. Every obligation has an associated date</p>\n    <ol>\n      <li>Rent/Mortgage 1st.</li>\n    <blockquote>Every obligation due date that falls within an earnings range should be deducted from the earningsTotal for that same range automatically</blockquote>\n\n     -->\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}