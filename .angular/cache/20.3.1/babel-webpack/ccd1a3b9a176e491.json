{"ast":null,"code":"import { __esDecorate, __runInitializers } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Earning } from '../../models/earning.model';\nimport { map } from 'rxjs/operators';\nlet EarningsComponent = (() => {\n  let _classDecorators = [Component({\n    selector: 'app-earnings',\n    templateUrl: './earnings.component.html',\n    styleUrls: ['./earnings.component.sass']\n  })];\n  let _classDescriptor;\n  let _classExtraInitializers = [];\n  let _classThis;\n  var EarningsComponent = class {\n    static {\n      _classThis = this;\n    }\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      __esDecorate(null, _classDescriptor = {\n        value: _classThis\n      }, _classDecorators, {\n        kind: \"class\",\n        name: _classThis.name,\n        metadata: _metadata\n      }, null, _classExtraInitializers);\n      EarningsComponent = _classThis = _classDescriptor.value;\n      if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n      __runInitializers(_classThis, _classExtraInitializers);\n    }\n    constructor(afs, as) {\n      this.afs = afs;\n      this.as = as;\n      this.as.afAuth.authState.subscribe(user => {\n        if (user) {\n          this.userId = user.uid;\n        }\n      });\n    }\n    ngOnInit() {\n      // Need to get the current month and then add a where clause for the current month only\n      this.earningsCollection = this.afs.collection('earnings', ref => ref.where('owner', '==', this.userId));\n      this.earningsList = this.earningsCollection.snapshotChanges().pipe(map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {\n            id,\n            ...data\n          };\n        });\n      }));\n    }\n    removeEarning(earning) {\n      const doc = this.afs.doc(`earnings/${earning.id}`);\n      doc.delete();\n    }\n    onSubmit(f) {\n      const earning = new Earning(f.value.source, f.value.date, f.value.amount, this.userId);\n      const data = JSON.parse(JSON.stringify(earning));\n      this.earningsCollection.add(data);\n      f.reset();\n    }\n  };\n  return EarningsComponent = _classThis;\n})();\nexport { EarningsComponent };","map":{"version":3,"names":["Component","Earning","map","EarningsComponent","selector","templateUrl","styleUrls","__esDecorate","_classDescriptor","value","_classThis","_classDecorators","kind","name","metadata","_metadata","_classExtraInitializers","__runInitializers","constructor","afs","as","afAuth","authState","subscribe","user","userId","uid","ngOnInit","earningsCollection","collection","ref","where","earningsList","snapshotChanges","pipe","actions","a","data","payload","doc","id","removeEarning","earning","delete","onSubmit","f","source","date","amount","JSON","parse","stringify","add","reset"],"sources":["/Users/saxis/dev/angular_projects/ha-kings/src/app/earnings/earnings.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Earning } from '../../models/earning.model';\nimport { NgForm } from '@angular/forms';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../core/auth.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-earnings',\n  templateUrl: './earnings.component.html',\n  styleUrls: ['./earnings.component.sass']\n})\nexport class EarningsComponent implements OnInit {\n  earningsCollection: AngularFirestoreCollection<Earning>;\n  earningsList: Observable<Earning[]>;\n  userId: string;\n\n  constructor(private afs: AngularFirestore, private as: AuthService) {\n    this.as.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userId = user.uid;\n      }\n    });\n  }\n\n  ngOnInit() {\n    // Need to get the current month and then add a where clause for the current month only\n\n    this.earningsCollection = this.afs.collection('earnings', ref => ref.where('owner', '==', this.userId));\n    this.earningsList = this.earningsCollection.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data() as Earning;\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );\n  }\n\n  removeEarning(earning) {\n    const doc = this.afs.doc(`earnings/${earning.id}`);\n    doc.delete();\n  }\n\n  onSubmit(f: NgForm) {\n    const earning = new Earning(f.value.source, f.value.date, f.value.amount, this.userId);\n\n    const data = JSON.parse(JSON.stringify(earning));\n\n    this.earningsCollection.add(data);\n\n    f.reset();\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,OAAO,QAAQ,4BAA4B;AAKpD,SAASC,GAAG,QAAQ,gBAAgB;IAOvBC,iBAAiB;0BAL7BH,SAAS,CAAC;IACTI,QAAQ,EAAE,cAAc;IACxBC,WAAW,EAAE,2BAA2B;IACxCC,SAAS,EAAE,CAAC,2BAA2B;GACxC,CAAC;;;;;;;;;;MACFC,YAAA,OAAAC,gBAAA;QAAAC,KAAA,EAAAC;MAAA,GAAAC,gBAAA;QAAAC,IAAA;QAAAC,IAAA,EAAAH,UAAA,CAAAG,IAAA;QAAAC,QAAA,EAAAC;MAAA,SAAAC,uBAAA;;;;;;;;MAAaC,iBAAA,CAAAP,UAAA,EAAAM,uBAAA;;IAKXE,YAAoBC,GAAqB,EAAUC,EAAe;MAA9C,KAAAD,GAAG,GAAHA,GAAG;MAA4B,KAAAC,EAAE,GAAFA,EAAE;MACnD,IAAI,CAACA,EAAE,CAACC,MAAM,CAACC,SAAS,CAACC,SAAS,CAACC,IAAI,IAAG;QACxC,IAAIA,IAAI,EAAE;UACR,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACE,GAAG;QACxB;MACF,CAAC,CAAC;IACJ;IAEAC,QAAQA,CAAA;MACN;MAEA,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACT,GAAG,CAACU,UAAU,CAAC,UAAU,EAAEC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAACN,MAAM,CAAC,CAAC;MACvG,IAAI,CAACO,YAAY,GAAG,IAAI,CAACJ,kBAAkB,CAACK,eAAe,EAAE,CAACC,IAAI,CAChEhC,GAAG,CAACiC,OAAO,IAAG;QACZ,OAAOA,OAAO,CAACjC,GAAG,CAACkC,CAAC,IAAG;UACrB,MAAMC,IAAI,GAAGD,CAAC,CAACE,OAAO,CAACC,GAAG,CAACF,IAAI,EAAa;UAC5C,MAAMG,EAAE,GAAGJ,CAAC,CAACE,OAAO,CAACC,GAAG,CAACC,EAAE;UAC3B,OAAO;YAAEA,EAAE;YAAE,GAAGH;UAAI,CAAE;QACxB,CAAC,CAAC;MACJ,CAAC,CAAC,CACH;IACH;IAEAI,aAAaA,CAACC,OAAO;MACnB,MAAMH,GAAG,GAAG,IAAI,CAACpB,GAAG,CAACoB,GAAG,CAAC,YAAYG,OAAO,CAACF,EAAE,EAAE,CAAC;MAClDD,GAAG,CAACI,MAAM,EAAE;IACd;IAEAC,QAAQA,CAACC,CAAS;MAChB,MAAMH,OAAO,GAAG,IAAIzC,OAAO,CAAC4C,CAAC,CAACpC,KAAK,CAACqC,MAAM,EAAED,CAAC,CAACpC,KAAK,CAACsC,IAAI,EAAEF,CAAC,CAACpC,KAAK,CAACuC,MAAM,EAAE,IAAI,CAACvB,MAAM,CAAC;MAEtF,MAAMY,IAAI,GAAGY,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACT,OAAO,CAAC,CAAC;MAEhD,IAAI,CAACd,kBAAkB,CAACwB,GAAG,CAACf,IAAI,CAAC;MAEjCQ,CAAC,CAACQ,KAAK,EAAE;IACX;;;;SAzCWlD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}