{"ast":null,"code":"import { BehaviorSubject, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this._user$ = new BehaviorSubject(null);\n    this.user$ = this._user$.asObservable();\n  }\n  signIn(email, _password) {\n    const u = {\n      id: 'local-' + btoa(email),\n      email\n    };\n    this._user$.next(u);\n    localStorage.setItem('hak_user', JSON.stringify(u));\n    return of(u);\n  }\n  signOut() {\n    this._user$.next(null);\n    localStorage.removeItem('hak_user');\n  }\n  restore() {\n    const raw = localStorage.getItem('hak_user');\n    if (raw) this._user$.next(JSON.parse(raw));\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","of","AuthService","constructor","_user$","user$","asObservable","signIn","email","_password","u","id","btoa","next","localStorage","setItem","JSON","stringify","signOut","removeItem","restore","raw","getItem","parse","factory","ɵfac","providedIn"],"sources":["/Users/saxis/dev/angular_projects/ha-kings/src/app/core/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n\nexport interface User { id: string; email?: string; name?: string; }\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private _user$ = new BehaviorSubject<User | null>(null);\n  user$ = this._user$.asObservable();\n\n  signIn(email: string, _password: string): Observable<User> {\n    const u = { id: 'local-' + btoa(email), email };\n    this._user$.next(u);\n    localStorage.setItem('hak_user', JSON.stringify(u));\n    return of(u);\n  }\n  signOut(): void {\n    this._user$.next(null);\n    localStorage.removeItem('hak_user');\n  }\n  restore(): void {\n    const raw = localStorage.getItem('hak_user');\n    if (raw) this._user$.next(JSON.parse(raw));\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,EAAcC,EAAE,QAAQ,MAAM;;AAKtD,OAAM,MAAOC,WAAW;EADxBC,YAAA;IAEU,KAAAC,MAAM,GAAG,IAAIJ,eAAe,CAAc,IAAI,CAAC;IACvD,KAAAK,KAAK,GAAG,IAAI,CAACD,MAAM,CAACE,YAAY,EAAE;;EAElCC,MAAMA,CAACC,KAAa,EAAEC,SAAiB;IACrC,MAAMC,CAAC,GAAG;MAAEC,EAAE,EAAE,QAAQ,GAAGC,IAAI,CAACJ,KAAK,CAAC;MAAEA;IAAK,CAAE;IAC/C,IAAI,CAACJ,MAAM,CAACS,IAAI,CAACH,CAAC,CAAC;IACnBI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,CAAC,CAAC,CAAC;IACnD,OAAOT,EAAE,CAACS,CAAC,CAAC;EACd;EACAQ,OAAOA,CAAA;IACL,IAAI,CAACd,MAAM,CAACS,IAAI,CAAC,IAAI,CAAC;IACtBC,YAAY,CAACK,UAAU,CAAC,UAAU,CAAC;EACrC;EACAC,OAAOA,CAAA;IACL,MAAMC,GAAG,GAAGP,YAAY,CAACQ,OAAO,CAAC,UAAU,CAAC;IAC5C,IAAID,GAAG,EAAE,IAAI,CAACjB,MAAM,CAACS,IAAI,CAACG,IAAI,CAACO,KAAK,CAACF,GAAG,CAAC,CAAC;EAC5C;;;uCAjBWnB,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}