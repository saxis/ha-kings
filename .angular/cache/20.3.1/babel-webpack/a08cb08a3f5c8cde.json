{"ast":null,"code":"import { of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../core/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction EarningsComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function EarningsComponent_div_11_Template_button_click_3_listener() {\n      const item_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeEarning(item_r3));\n    });\n    i0.ɵɵtext(4, \"DELETE\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" \", item_r3.source, \" || \", item_r3.amount, \" || \", item_r3.date, \" \");\n  }\n}\nexport class EarningsComponent {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.earningsList = of([]);\n    this.userId = '';\n  }\n  ngOnInit() {\n    this.auth.restore();\n    this.earningsList = this.auth.user$.pipe(switchMap(u => {\n      this.userId = u?.id ?? '';\n      return this.http.get('/api/income').pipe(map(list => this.userId ? list.filter(e => e.owner === this.userId) : list));\n    }));\n  }\n  reload() {\n    this.earningsList = this.http.get('/api/income').pipe(map(list => this.userId ? list.filter(e => e.owner === this.userId) : list));\n  }\n  removeEarning(earning) {\n    if (!earning.id) return;\n    this.http.delete(`/api/income/${earning.id}`).subscribe(() => this.reload());\n  }\n  onSubmit(f) {\n    const payload = {\n      source: f.value.source,\n      date: f.value.date || null,\n      amount: Number(f.value.amount || 0),\n      owner: this.userId\n    };\n    this.http.post('/api/income', payload).subscribe(() => this.reload());\n    f.reset();\n  }\n  static {\n    this.ɵfac = function EarningsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EarningsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EarningsComponent,\n      selectors: [[\"app-earnings\"]],\n      decls: 26,\n      vars: 3,\n      consts: [[\"f\", \"ngForm\"], [\"jonesy\", \"ngModel\"], [1, \"container\"], [1, \"columns\"], [1, \"column\"], [1, \"panel\"], [1, \"panel-heading\"], [1, \"panel-block\"], [1, \"control\", \"has-icons-left\"], [\"type\", \"text\", \"placeholder\", \"search\", 1, \"input\", \"is-small\"], [1, \"icon\", \"is-small\", \"is-left\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-search\"], [4, \"ngFor\", \"ngForOf\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [1, \"field\"], [1, \"label\"], [1, \"control\", \"has-icons-left\", \"has-icons-right\"], [\"type\", \"text\", \"placeholder\", \"Who is the source?\", \"name\", \"source\", \"ngModel\", \"\", \"required\", \"\", 1, \"input\", \"is-success\"], [\"type\", \"date\", \"placeholder\", \"When was it received?\", \"name\", \"date\", \"ngModel\", \"\", \"required\", \"\", 1, \"input\", \"is-success\"], [\"type\", \"number\", \"placeholder\", \"How much was it?\", \"name\", \"amount\", \"ngModel\", \"\", \"required\", \"\", 1, \"input\", \"is-success\"], [1, \"button\"], [1, \"panel-block\", \"is-active\", \"has-icons-right\", \"control\"], [1, \"button\", 3, \"click\"]],\n      template: function EarningsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"nav\", 5)(4, \"p\", 6);\n          i0.ɵɵtext(5, \" Earnings \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 7)(7, \"p\", 8);\n          i0.ɵɵelement(8, \"input\", 9);\n          i0.ɵɵelementStart(9, \"span\", 10);\n          i0.ɵɵelement(10, \"i\", 11);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(11, EarningsComponent_div_11_Template, 5, 3, \"div\", 12);\n          i0.ɵɵpipe(12, \"async\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 4)(14, \"form\", 13, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function EarningsComponent_Template_form_ngSubmit_14_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const f_r5 = i0.ɵɵreference(15);\n            return i0.ɵɵresetView(ctx.onSubmit(f_r5));\n          });\n          i0.ɵɵelementStart(16, \"div\", 14)(17, \"label\", 15);\n          i0.ɵɵtext(18, \"Add Earning\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 16);\n          i0.ɵɵelement(20, \"input\", 17, 1)(22, \"input\", 18)(23, \"input\", 19);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"button\", 20);\n          i0.ɵɵtext(25, \"Submit\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 1, ctx.earningsList));\n        }\n      },\n      dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.AsyncPipe],\n      styles: [\".footer[_ngcontent-%COMP%] {\\n  background: hsl(0, 14%, 78%);\\n  color: hsl(12, 29%, 77%);\\n}\\n\\na[_ngcontent-%COMP%] {\\n  color: hsl(12, 29%, 77%);\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWFybmluZ3MvZWFybmluZ3MuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUE7RUFDSSw0QkFQSztFQVFMLHdCQU5LO0FBQ1Q7O0FBT0E7RUFDSSx3QkFUSztFQVVMLGlCQUFBO0FBSkoiLCJzb3VyY2VzQ29udGVudCI6WyIkY29sb3IxOiBoc2xhKDAlLCAxNCUsIDc4JSwgMSlcbiRjb2xvcjI6IGhzbGEoMzklLCA0MiUsIDg3JSwgMSlcbiRjb2xvcjM6IGhzbGEoMTIlLCAyOSUsIDc3JSwgMSlcbiRjb2xvcjQ6IGhzbGEoMzU4JSwgMjQlLCA1MiUsIDEpXG4kY29sb3I1OiBoc2xhKDMzNyUsIDQxJSwgMzAlLCAxKVxuXG4uZm9vdGVyXG4gICAgYmFja2dyb3VuZDogJGNvbG9yMVxuICAgIGNvbG9yOiAkY29sb3IzXG5cbmFcbiAgICBjb2xvcjogJGNvbG9yM1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["of","map","switchMap","i0","ɵɵelementStart","ɵɵtext","ɵɵlistener","EarningsComponent_div_11_Template_button_click_3_listener","item_r3","ɵɵrestoreView","_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","removeEarning","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate3","source","amount","date","EarningsComponent","constructor","http","auth","earningsList","userId","ngOnInit","restore","user$","pipe","u","id","get","list","filter","e","owner","reload","earning","delete","subscribe","onSubmit","f","payload","value","Number","post","reset","ɵɵdirectiveInject","i1","HttpClient","i2","AuthService","selectors","decls","vars","consts","template","EarningsComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","EarningsComponent_div_11_Template","EarningsComponent_Template_form_ngSubmit_14_listener","_r1","f_r5","ɵɵreference","ɵɵproperty","ɵɵpipeBind1"],"sources":["/Users/saxis/dev/angular_projects/ha-kings/src/app/earnings/earnings.component.ts","/Users/saxis/dev/angular_projects/ha-kings/src/app/earnings/earnings.component.html"],"sourcesContent":["// src/app/earnings/earnings.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AuthService, User } from '../core/auth.service';\n\nexport interface Earning {\n  id?: number;\n  source: string;\n  date?: string;        // ISO yyyy-mm-dd\n  amount: number;\n  owner: string;        // user id\n}\n\n@Component({\n  selector: 'app-earnings',\n  templateUrl: './earnings.component.html',\n  styleUrls: ['./earnings.component.sass']\n})\nexport class EarningsComponent implements OnInit {\n  earningsList: Observable<Earning[]> = of([]);\n  userId = '';\n\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.auth.restore();\n    this.earningsList = this.auth.user$.pipe(\n      switchMap((u: User | null) => {\n        this.userId = u?.id ?? '';\n        return this.http.get<Earning[]>('/api/income').pipe(\n          map(list => this.userId ? list.filter(e => e.owner === this.userId) : list)\n        );\n      })\n    );\n  }\n\n  reload(): void {\n    this.earningsList = this.http.get<Earning[]>('/api/income').pipe(\n      map(list => this.userId ? list.filter(e => e.owner === this.userId) : list)\n    );\n  }\n\n  removeEarning(earning: Earning): void {\n    if (!earning.id) return;\n    this.http.delete(`/api/income/${earning.id}`).subscribe(() => this.reload());\n  }\n\n  onSubmit(f: NgForm): void {\n    const payload: Earning = {\n      source: f.value.source,\n      date: f.value.date || null,\n      amount: Number(f.value.amount || 0),\n      owner: this.userId\n    };\n    this.http.post<Earning>('/api/income', payload).subscribe(() => this.reload());\n    f.reset();\n  }\n}\n","<div class=\"container\">\n  <div class=\"columns\">\n    <div class=\"column\">\n      <nav class=\"panel\">\n        <p class=\"panel-heading\">\n          Earnings\n        </p>\n        <div class=\"panel-block\">\n          <p class=\"control has-icons-left\">\n            <input class=\"input is-small\" type=\"text\" placeholder=\"search\">\n            <span class=\"icon is-small is-left\">\n              <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\n            </span>\n          </p>\n        </div>\n        <div *ngFor=\"let item of earningsList | async\">\n          <a class=\"panel-block is-active has-icons-right control\">\n            {{item.source}} || {{item.amount}} || {{item.date}}\n            <button class=\"button\" (click)=\"removeEarning(item)\">DELETE</button>\n          </a>\n        </div>\n      </nav>\n    </div>\n    <div class=\"column\">\n      <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n        <div class=\"field\">\n          <label class=\"label\">Add Earning</label>\n          <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-success\" type=\"text\"   placeholder=\"Who is the source?\"    name=\"source\" ngModel required #jonesy=\"ngModel\">\n            <input class=\"input is-success\" type=\"date\"   placeholder=\"When was it received?\" name=\"date\"   ngModel required >\n            <input class=\"input is-success\" type=\"number\" placeholder=\"How much was it?\"      name=\"amount\" ngModel required >\n          </div>\n        </div>\n        <button class=\"button\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}