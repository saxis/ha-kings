{"ast":null,"code":"import { __esDecorate, __runInitializers } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Desire } from '../../models/desire.model';\nimport { map } from 'rxjs/operators';\nlet DesiresComponent = (() => {\n  let _classDecorators = [Component({\n    selector: 'app-desires',\n    templateUrl: './desires.component.html',\n    styleUrls: ['./desires.component.sass']\n  })];\n  let _classDescriptor;\n  let _classExtraInitializers = [];\n  let _classThis;\n  var DesiresComponent = class {\n    static {\n      _classThis = this;\n    }\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      __esDecorate(null, _classDescriptor = {\n        value: _classThis\n      }, _classDecorators, {\n        kind: \"class\",\n        name: _classThis.name,\n        metadata: _metadata\n      }, null, _classExtraInitializers);\n      DesiresComponent = _classThis = _classDescriptor.value;\n      if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n      __runInitializers(_classThis, _classExtraInitializers);\n    }\n    constructor(afs, as) {\n      this.afs = afs;\n      this.as = as;\n      this.showdesireform = false;\n      this.as.afAuth.authState.subscribe(user => {\n        if (user) {\n          this.userId = user.uid;\n        }\n      });\n    }\n    ngOnInit() {\n      this.desiresCollection = this.afs.collection('desires', ref => ref.where('owner', '==', this.userId).where('fulfilled', '==', false));\n      this.desiresList = this.desiresCollection.snapshotChanges().pipe(map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {\n            id,\n            ...data\n          };\n        });\n      }));\n    }\n    removeDesire(desire) {\n      const doc = this.afs.doc(`desires/${desire.id}`);\n      doc.delete();\n    }\n    doNow(desire) {\n      const doc = this.afs.doc(`desires/${desire.id}`);\n      doc.update({\n        fulfilled: true\n      });\n      console.log('Clicking this should decrease the earnings total by the desires amount');\n      // console.log('It should be added to a list of desires fulfilled for the day/month');\n      // console.log('Fulfilled Desires needs to be its own collection reached via a subpage somehwere on the desires page');\n    }\n    onSubmit(f) {\n      console.log(typeof f.value.amount);\n      const desire = new Desire(f.value.name, f.value.detail, f.value.year, f.value.amount, false, false, f.value.recipient, this.userId);\n      const data = JSON.parse(JSON.stringify(desire));\n      this.desiresCollection.add(data);\n      f.reset();\n    }\n  };\n  return DesiresComponent = _classThis;\n})();\nexport { DesiresComponent };","map":{"version":3,"names":["Component","Desire","map","DesiresComponent","selector","templateUrl","styleUrls","__esDecorate","_classDescriptor","value","_classThis","_classDecorators","kind","name","metadata","_metadata","_classExtraInitializers","__runInitializers","constructor","afs","as","showdesireform","afAuth","authState","subscribe","user","userId","uid","ngOnInit","desiresCollection","collection","ref","where","desiresList","snapshotChanges","pipe","actions","a","data","payload","doc","id","removeDesire","desire","delete","doNow","update","fulfilled","console","log","onSubmit","f","amount","detail","year","recipient","JSON","parse","stringify","add","reset"],"sources":["/Users/saxis/dev/angular_projects/ha-kings/src/app/desires/desires.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Desire } from '../../models/desire.model';\nimport { NgForm } from '@angular/forms';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../core/auth.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-desires',\n  templateUrl: './desires.component.html',\n  styleUrls: ['./desires.component.sass']\n})\nexport class DesiresComponent implements OnInit {\n  desiresCollection: AngularFirestoreCollection<Desire>;\n  desiresList: Observable<Desire[]>;\n  showdesireform = false;\n  fulfilledList: Observable<Desire[]>;\n  userId: string;\n\n  constructor(private afs: AngularFirestore, private as: AuthService) {\n    this.as.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userId = user.uid;\n      }\n    });\n   }\n\n  ngOnInit() {\n    this.desiresCollection = this.afs.collection('desires', ref => ref.where('owner', '==', this.userId) .where('fulfilled', '==', false) );\n    this.desiresList = this.desiresCollection.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data() as Desire;\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );\n  }\n\n  removeDesire(desire) {\n    const doc = this.afs.doc(`desires/${desire.id}`);\n    doc.delete();\n  }\n\n  doNow(desire) {\n    const doc = this.afs.doc(`desires/${desire.id}`);\n    doc.update({fulfilled: true});\n\n    console.log('Clicking this should decrease the earnings total by the desires amount');\n    // console.log('It should be added to a list of desires fulfilled for the day/month');\n    // console.log('Fulfilled Desires needs to be its own collection reached via a subpage somehwere on the desires page');\n  }\n\n  onSubmit(f: NgForm) {\n    console.log(typeof(f.value.amount));\n\n    const desire = new Desire(f.value.name, f.value.detail, f.value.year, f.value.amount,\n      false, false, f.value.recipient, this.userId);\n\n    const data = JSON.parse(JSON.stringify(desire));\n\n    this.desiresCollection.add(data);\n\n    f.reset();\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}