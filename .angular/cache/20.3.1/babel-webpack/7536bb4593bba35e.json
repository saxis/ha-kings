{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate() {\n    this.auth.restore();\n    return this.auth.user$.pipe(map(u => !!u || (this.router.navigate(['/login']), false)));\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","AuthGuard","constructor","auth","router","canActivate","restore","user$","pipe","u","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/saxis/dev/angular_projects/ha-kings/src/app/core/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) { }\n  canActivate() {\n    this.auth.restore();\n    return this.auth.user$.pipe(map(u => !!u || (this.router.navigate(['/login']), false)));\n  }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;;AAIpC,OAAM,MAAOC,SAAS;EACpBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EACjEC,WAAWA,CAAA;IACT,IAAI,CAACF,IAAI,CAACG,OAAO,EAAE;IACnB,OAAO,IAAI,CAACH,IAAI,CAACI,KAAK,CAACC,IAAI,CAACR,GAAG,CAACS,CAAC,IAAI,CAAC,CAACA,CAAC,KAAK,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EACzF;;;uCALWT,SAAS,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATf,SAAS;MAAAgB,OAAA,EAAThB,SAAS,CAAAiB,IAAA;MAAAC,UAAA,EADI;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}