{"ast":null,"code":"// src/app/mock/mock-backend.interceptor.ts\nimport { HttpResponse } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nconst db = {/* your assets/debts/desires/income/obligations/summary */};\nfunction parse(url) {\n  const m = url.match(/^\\/api\\/([^\\/]+)(?:\\/(\\d+))?/);\n  if (!m) return null;\n  const [, coll, id] = m;\n  return {\n    coll,\n    id: id ? Number(id) : null\n  };\n}\nexport const mockBackendInterceptor = (req, next) => {\n  if (!req.url.startsWith('/api/')) return next(req);\n  const parsed = parse(req.url);\n  if (!parsed || !(parsed.coll in db)) return next(req);\n  const {\n    coll,\n    id\n  } = parsed;\n  if (req.method === 'GET') {\n    const body = id == null ? db[coll] : db[coll].find(x => x.id === id);\n    return of(new HttpResponse({\n      status: 200,\n      body\n    })).pipe(delay(150));\n  }\n  if (req.method === 'POST') {\n    const items = db[coll];\n    const newId = items.length ? Math.max(...items.map(x => x.id)) + 1 : 1;\n    const item = {\n      id: newId,\n      ...req.body\n    };\n    items.push(item);\n    return of(new HttpResponse({\n      status: 201,\n      body: item\n    })).pipe(delay(150));\n  }\n  if (req.method === 'PUT' && id != null) {\n    const items = db[coll];\n    const idx = items.findIndex(x => x.id === id);\n    if (idx === -1) return of(new HttpResponse({\n      status: 404\n    })).pipe(delay(100));\n    items[idx] = {\n      ...items[idx],\n      ...req.body,\n      id\n    };\n    return of(new HttpResponse({\n      status: 200,\n      body: items[idx]\n    })).pipe(delay(150));\n  }\n  if (req.method === 'DELETE' && id != null) {\n    const items = db[coll];\n    const idx = items.findIndex(x => x.id === id);\n    if (idx === -1) return of(new HttpResponse({\n      status: 404\n    })).pipe(delay(100));\n    items.splice(idx, 1);\n    return of(new HttpResponse({\n      status: 204\n    })).pipe(delay(120));\n  }\n  return next(req);\n};","map":{"version":3,"names":["HttpResponse","of","delay","db","parse","url","m","match","coll","id","Number","mockBackendInterceptor","req","next","startsWith","parsed","method","body","find","x","status","pipe","items","newId","length","Math","max","map","item","push","idx","findIndex","splice"],"sources":["/Users/saxis/dev/angular_projects/ha-kings/src/app/mock/mock-backend.interceptor.ts"],"sourcesContent":["// src/app/mock/mock-backend.interceptor.ts\nimport { HttpInterceptorFn, HttpResponse } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nconst db = { /* your assets/debts/desires/income/obligations/summary */ };\n\nfunction parse(url: string) {\n  const m = url.match(/^\\/api\\/([^\\/]+)(?:\\/(\\d+))?/);\n  if (!m) return null;\n  const [, coll, id] = m;\n  return { coll, id: id ? Number(id) : null };\n}\n\nexport const mockBackendInterceptor: HttpInterceptorFn = (req, next) => {\n  if (!req.url.startsWith('/api/')) return next(req);\n  const parsed = parse(req.url);\n  if (!parsed || !(parsed.coll in db)) return next(req);\n\n  const { coll, id } = parsed as { coll: keyof typeof db; id: number | null };\n\n  if (req.method === 'GET') {\n    const body = id == null ? (db as any)[coll] : (db as any)[coll].find((x: any) => x.id === id);\n    return of(new HttpResponse({ status: 200, body })).pipe(delay(150));\n  }\n  if (req.method === 'POST') {\n    const items = (db as any)[coll];\n    const newId = items.length ? Math.max(...items.map((x: any) => x.id)) + 1 : 1;\n    const item = { id: newId, ...req.body };\n    items.push(item);\n    return of(new HttpResponse({ status: 201, body: item })).pipe(delay(150));\n  }\n  if (req.method === 'PUT' && id != null) {\n    const items = (db as any)[coll];\n    const idx = items.findIndex((x: any) => x.id === id);\n    if (idx === -1) return of(new HttpResponse({ status: 404 })).pipe(delay(100));\n    items[idx] = { ...items[idx], ...req.body, id };\n    return of(new HttpResponse({ status: 200, body: items[idx] })).pipe(delay(150));\n  }\n  if (req.method === 'DELETE' && id != null) {\n    const items = (db as any)[coll];\n    const idx = items.findIndex((x: any) => x.id === id);\n    if (idx === -1) return of(new HttpResponse({ status: 404 })).pipe(delay(100));\n    items.splice(idx, 1);\n    return of(new HttpResponse({ status: 204 })).pipe(delay(120));\n  }\n  return next(req);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}